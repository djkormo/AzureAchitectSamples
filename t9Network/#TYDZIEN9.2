#9.2 A jeśli planowanie to nie twój żywioł to zrób proszę prostą architekturę i uruchom ją w Azure (jak masz zapał, to wykorzystaj do tego skrypty ARM).
Co ma powstać:
1)	Sieć z podziałem na 3 subnety
2)	W subnecie pierwszym niech stanie Application Gateway, w drugim dwa serwery z dowolnym serwerem aplikacyjnym w Availability Set, w 3 dowolna baza danych
3)	Zrób odpowiednią segmentacje ruchu pomiędzy sieciami za pomocą NSG oraz ASG, tak by tylko ruch, który powinien wchodził i wychodził z danych segmenetów sieci
4)	Przed całym rozwiązaniem postaw Azure Traffic Managera i skonfiguruj go w dowolnej opcji i sprawdź jak działa
5)	Na koniec, ustaw logowanie wszystkich NSG do Azure Traffic Analytics i zobacz po 24h jaki ruch tam został zarejestrowany
6)	Na koniec, sprawdź czy Twoje NSG i ASG poprawnie działają za pomocą narzędzie Network Watcher i dostępnych tam opcji. 
Liczę na dobre zrzuty ekranu i opis rozwiązania.  



Propozycja

Wordpress uruchomiony z kontenera z  baza Mysql (Paas). 

VNET-WP-09

SUBNET-FP Application Gateway z publicznym IP



SUBNET-WK WebApp for Containers (linux version)

Tu zostanie uruchomiony wordpress z obrazu


https://github.com/bartr/azurewordpress
Obraz z dockerHuba
bartr/apache-wordpress

Wymaga konfiguracji czterech zmiennych

Konfiguracja  zmiennych środowiskowych
fragment wp-config.php :
define('DB_NAME', getenv('WORDPRESS_DB_NAME')); 
define('DB_USER', getenv('WORDPRESS_DB_USER')); 
define('DB_PASSWORD', getenv('WORDPRESS_DB_PASSWORD')); 
define('DB_HOST', getenv('WORDPRESS_DB_HOST'));



SUBNET-DB

Azure Database for MySQL




Literatura:

https://kvaes.wordpress.com/2018/06/08/taking-a-look-at-azure-service-endpoints/



az group create --name rg-tydzien-09-final --location eastus

az vm availability-set create \
    --resource-group rg-tydzien-09-final \
    --name myAvailabilitySet \
    --platform-fault-domain-count 2 \
    --platform-update-domain-count 2
	

for i in `seq 1 2`; do
   az vm create \
     --resource-group rg-tydzien-09-final \
     --name myUbuntuWP$i \
     --availability-set myAvailabilitySet \
     --size Standard_A1_v2  \
     --vnet-name VNET-WP-09 \
     --subnet SUBNET-WK \
     --image UbuntuLTS \
     --admin-username azureuser \
	 --admin-password Pa$$word2018..
done
	

Installing WP on ubuntu 1604 LTS

https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/wordpress-single-vm-ubuntu/install_wordpress.sh

#!/bin/bash

apt-get -y update

logger "Installing WordPress"

# Set up a silent install of MySQL
dbpass=$1

export DEBIAN_FRONTEND=noninteractive
echo mysql-server-5.6 mysql-server/root_password password $dbpass | debconf-set-selections
echo mysql-server-5.6 mysql-server/root_password_again password $dbpass | debconf-set-selections

# Install the LAMP stack and WordPress
apt-get -y install apache2 mysql-server php5 php5-mysql wordpress

# Setup WordPress
gzip -d /usr/share/doc/wordpress/examples/setup-mysql.gz
bash /usr/share/doc/wordpress/examples/setup-mysql -n wordpress localhost

ln -s /usr/share/wordpress /var/www/html/wordpress
mv /etc/wordpress/config-localhost.php /etc/wordpress/config-default.php

# Restart Apache
apachectl restart

logger "Done installing WordPress; open /wordpress to configure"


WP w kontenerze, dodatkowo MYSQL  też w kontenerze , Application Gateway na froncie ..
https://github.com/Azure/azure-quickstart-templates/tree/master/201-aci-wordpress-vnet



Instalacja szachow w js

# aktualizacja pakietow

sudo apt-get clean -qy
sudo apt-get update -qy

# install packages
sudo apt-get install apache2 git -qy

# clone content of sample app
sudo git clone https://github.com/djkormo/simple-chess-ai

# copy content to apache root directory
cd simple-chess-ai 
cp -R . /var/www/html/ 
#sudo cd .. 
# rm -r simple-chess-ai/
sudo chmod a+x -R /var/www/html/






Liczymy Koszty :). Umówmy siê. Twój system backupu (nie ma znaczenia jaki) sk³aduje 1TB nowych danych ka¿dego dnia. Wykorzystujesz oczywiœcie Azure do tej operacji i chcesz dane sk³adowaæ jak najtaniej. Przez dwa lata nie kasujesz zebranych danych. Po dwóch latach na próbê odtwarzasz dane z ostatniego dnia ka¿dego roku. Po 3 roku kasujesz dane, zebrane w roku pierwszym.

Ile ³¹cznie wygenerujesz kosztów w ramach tej us³ugi, jeœli rozwa¿ymy pe³ny, 6 letni okres jej dzia³ania.

Rozwa¿ ró¿ne aspekty i ró¿ne mo¿liwoœci us³ug i poka¿ jako algorytm liczenia przyj¹³eœ. 

#TYDZIEN7.3

Na podstawie informacji 

https://azure.microsoft.com/en-us/pricing/calculator/

Zak³adam, ze zerowego dnia nie mam danych w kopii zapasowej. Dopiero startujê z uruchomieniem us³ug 

Dane bêdê przechowywaæ w North Europe, Block Blob Storage, General Purpose V2, LRS Redundancy

Koszt dzienny za 1TB  za  Hot Acces Tier $23.04 = cena x
Koszt dzienny za 1TB  za Cold Acces Tier $21.60 = cena y

 
Zak³adamy, ¿e rok ma 365 dni, dwa lata to 730 dni, trzy lata to 1095 dni.


Na poczatku chcia³em zrobiæ tak:

1.ROK  356 TB = 365 * cena x/30 = 
2.ROK  760 TB = 760 * cena x/30 =
3.ROK  760 TB = 1095 * cena x/30 =  
4.ROK  760 TB = 1095 * cena x/30 =
5.ROK  760 TB = 1095 * cena x/30 =
6.ROK  760 TB = 1095 * cena x/30 = 
To jest zle podejscie, gdy¿ zak³ada liczenie miesieczne statycznych kosztów us³ug magazynowych, a takie jest naliczane dziennie i codzinnie naszych danych w kopiach jest wiecej, od trzeciego  roku rotuj¹ cykliczne.


Tak naprawde, to musimy zbudowaæ to za pomoc¹ szeregów arytmetycznych. 

Przeskalowanie z miesi¹ca na dzien, zak³adam 30 dni w miesi¹cu. Wiem,¿e to jest uproszczenie.

Warto czasem wróciæ do szko³y 
http://matmaf.blogspot.com/2011/01/niepokorny-gauss-i-suma-ciagu.html

dla sumy 1+..+n , mamy wzór Gaussa = n*(n+1)/2 


1 rok suma 1 +..+365 [TB]  =   (365*366)/2 [TB] =   66795  [TB] 
2 rok suma 366+..+730 [TB]  =  (1+..+356+366+..+730) [TB] - (1+..+365)  [TB]= (730*731)/2  [TB] - (365*366)/2   [TB] =  266815 [TB] - 66795 [TB] =200020 [TB]
3 rok suma 731+..+1095 [TB]  = (1+..730+731+..+1095) [TB] - (1+..+730)  [TB] = (1095*1096)/2  [TB]- (730*731)/2  [TB] = 600060 [TB] - 200020 TB = 400040 [TB]
4 rok suma 731+..+1095 [TB]  = 400040 [TB]
5 rok suma 731+..+1095 [TB]  = 400040 [TB]
6 rok suma 731+..+1095 [TB]  = 400040 [TB]


Zak³adam miesiêczny koszt 1 [TB] Hot Acces Tier $23.04

1 rok =  66795  [TB]  * 23.04 [$/TB/month] * 1/30 [month]  =  51 298.56  $
2 rok = 200020  [TB]  * 23.04 [$/TB/month] * 1/30 [month] = 153 615.36 $
3 rok = 400040  [TB]  * 23.04 [$/TB/month] * 1/30 [month] = 307 230.72 $ 
4 rok = 400040  [TB]  * 23.04 [$/TB/month] * 1/30 [month] = 307 230.72 $ 
5 rok = 400040  [TB]  * 23.04 [$/TB/month] * 1/30 [month] = 307 230.72 $ 
6 rok = 400040  [TB]  * 23.04 [$/TB/month] * 1/30 [month] = 307 230.72 $ 

razem = 1 433 836.80 $




Inne podejscie na razie w wersji zapoznawczej

https://azure.microsoft.com/en-us/blog/azure-blob-storage-lifecycle-management-public-preview/



The following sample policy manages the lifecycle for such data. It applies to block blobs with prefix “foo”:

    Tier blobs to Cool storage 30 days after last modification
    Tier blobs to Archive storage 90 days after last modification
    Delete blobs 2,555 days (seven years) after last modification
    Delete blob snapshots 90 days after snapshot creation


{
   "version": "0.5",
   "rules": [
     {
       "name": "ruleFoo",
       "type": "Lifecycle",
       "definition": {
         "filters": {
           "blobTypes": [ "blockBlob" ],
           "prefixMatch": [ "foo" ]
         },
         "actions": {
           "baseBlob": {
             "tierToCool": { "daysAfterModificationGreaterThan": 30 },
             "tierToArchive": { "daysAfterModificationGreaterThan": 90 },
             "delete": { "daysAfterModificationGreaterThan": 2555 }
           },
           "snapshot": {
             "delete": { "daysAfterCreationGreaterThan": 90 }
           }
         }
       }
     }
   ]
}


